class Solution {
public:
        int shortestSubarray(vector<int>& A, int K) {
        deque<int> q;
        int result=INT_MAX;
        for(int i=0;i<A.size();i++){
            if(i>0){
                A[i]+=A[i-1];
            }
            
            if(A[i]>=K){
                result=min(result,i+1);
            }
            
            
            while(q.size()&&A[i]-A[q.front()]>=K){
                result=min(result,i-q.front());
                q.pop_front();
            }
            
            //removing prefixes which having sum less than curr prefix
            while(q.size()&&A[i]<=A[q.back()]){
                q.pop_back();
            }
            q.push_back(i);
        }
        
        if(result==INT_MAX){
            return -1;
        }
        return result;
    }
};
